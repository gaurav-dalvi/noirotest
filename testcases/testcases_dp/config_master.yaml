#!highlight yaml

heat_template_version: 2013-05-23

parameters:
    vm_image:
      type: string
      label: vm_image
      description: Image for all VMs
      default: trusty-multi-if

    vm_flavor:
      type: string
      label: vm_flavor
      description: Flavor for all VMs
      default: m1.medium

    availability_zone:
      type: string
      label: availability_zone
      description: The Availability Zone to Launch Instance
      default: 'gbp-zone'

    key_name:
      type: string
      label: key_name
      description: Name of an existing key pair to enable SSH access to the instance.
      default: 'gbpkey'

resources:
# Creating allow action
    demo_act:
        type: OS::Neutron::PolicyAction
        properties:
            name: demo_act
            action_type: allow
            shared: False

    demo_act_dup:
        type: OS::Neutron::PolicyAction
        properties:
            name: demo_act_dup
            action_type: allow
            shared: False

    mgmt_act:
        type: OS::Neutron::PolicyAction
        properties:
            name: mgmt_act
            action_type: allow
            shared: True

# Creating "shared" resource i.e.Mgmt PTG for rendering Mgmt-dhcp-ips to each Instance

    mgmt_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: mgmt_subnet
            ip_pool: "15.15.15.0/24"
            subnet_prefix_length: 28
            shared: True

    mgmt_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: mgmt_l3_policy
        properties:
            name: mgmt_bd
            l3_policy_id: { get_resource: mgmt_l3_policy }
            shared: True

    mgmt_ptg:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: mgmt_ptg
            l2_policy_id: {get_resource: mgmt_l2_policy}
            shared: True

# Creating a classifier,policy-rule,policy-ruleset(Contract) for any tcp traffic
    demo_class_any_tcp:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: demo_class_any_tcp
            protocol: tcp
            direction: in
            shared: False

    demo_rule_any_tcp:
        type: OS::Neutron::PolicyRule
        properties:
            name: demo_rule_any_tcp
            policy_classifier_id: { get_resource: demo_class_any_tcp }
            policy_actions: [{ get_resource: demo_act }]
            shared: False

    demo_ruleset_any_tcp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_any_tcp
            policy_rules: [{ get_resource: demo_rule_any_tcp }]
            child_policy_rule_sets: []
            shared: False

# Creating a classifier,policy-rule,policy-ruleset(Contract) for any udp traffic
    demo_class_any_udp:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: demo_class_any_udp
            protocol: udp
            direction: in
            shared: False

    demo_rule_any_udp:
        type: OS::Neutron::PolicyRule
        properties:
            name: demo_rule_any_udp
            policy_classifier_id: { get_resource: demo_class_any_udp }
            policy_actions: [{ get_resource: demo_act }]
            shared: False

    demo_ruleset_any_udp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_any_udp
            policy_rules: [{ get_resource: demo_rule_any_udp }]
            child_policy_rule_sets: []
            shared: False

# Creating a classifier,policy-rule,policy-ruleset(Contract) for ICMP traffic
    demo_class_icmp:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: demo_class_icmp
            protocol: icmp
            direction: bi
            shared: False

    demo_rule_icmp:
        type: OS::Neutron::PolicyRule
        properties:
            name: demo_rule_icmp
            policy_classifier_id: { get_resource: demo_class_icmp }
            policy_actions: [{ get_resource: demo_act }]
            shared: False

    demo_ruleset_icmp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_icmp
            policy_rules: [{ get_resource: demo_rule_icmp }]
            child_policy_rule_sets: []
            shared: False

# Creating a classifier,policy-rule,policy-ruleset(Contract) for allow all protocol(ICMP,TCP,UDP)

    demo_ruleset_all:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_all
            policy_rules: [{ get_resource: demo_rule_icmp }, { get_resource: demo_rule_any_tcp }, { get_resource: demo_rule_any_udp }]
            child_policy_rule_sets: []
            shared: False

# Creating L3Policy,L2Policy and PTG and VMs for header SamePTG_SameL2P_SameL3P
    demo_sameptgl2pl3p_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_sameptgl2pl3p_l3p
            ip_pool: "5.5.5.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_sameptgl2pl3p_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_sameptgl2pl3p_l3_policy
        properties:
            name: demo_sameptgl2pl3p_bd
            l3_policy_id: { get_resource: demo_sameptgl2pl3p_l3_policy }
            shared: False

    demo_sameptgl2pl3p_ptg:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_sameptgl2pl3p_ptg
            l2_policy_id: {get_resource: demo_sameptgl2pl3p_l2_policy}
            shared: False

    vm1_mgmt_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: mgmt_ptg
        properties:
            name: vm1_mgmt_pt
            description: 'VM1 Mgmt PT'
            policy_target_group_id: { get_resource: mgmt_ptg }

    vm1_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_sameptgl2pl3p_ptg
        properties:
            name: vm1_data_pt
            description: 'VM1 Data PT'
            policy_target_group_id: { get_resource: demo_sameptgl2pl3p_ptg }

    vm2_mgmt_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: mgmt_ptg
        properties:
            name: vm2_mgmt_pt
            description: 'VM2 Mgmt PT'
            policy_target_group_id: { get_resource: mgmt_ptg }

    vm2_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_sameptgl2pl3p_ptg
        properties:
            name: vm2_data_pt
            description: 'VM2 Data PT'
            policy_target_group_id: { get_resource: demo_sameptgl2pl3p_ptg }

    vm9_mgmt_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: mgmt_ptg
        properties:
            name: vm9_mgmt_pt
            description: 'VM9 Mgmt PT'
            policy_target_group_id: { get_resource: mgmt_ptg }

    vm9_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_sameptgl2pl3p_ptg
        properties:
            name: vm9_data_pt
            description: 'VM9 Data PT'
            policy_target_group_id: { get_resource: demo_sameptgl2pl3p_ptg }

    vm10_mgmt_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: mgmt_ptg
        properties:
            name: vm10_mgmt_pt
            description: 'VM10 Mgmt PT'
            policy_target_group_id: { get_resource: mgmt_ptg }

    vm10_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_sameptgl2pl3p_ptg
        properties:
            name: vm10_data_pt
            description: 'VM10 Data PT'
            policy_target_group_id: { get_resource: demo_sameptgl2pl3p_ptg }


# Creating L3Policy,L2Policy and PTG for header DiffPTG_SameL2P_SameL3P
    demo_diffptgsamel2pl3p_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_diffptgsamel2pl3p_l3p
            ip_pool: "6.6.6.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_diffptgsamel2pl3p_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_diffptgsamel2pl3p_l3_policy
        properties:
            name: demo_diffptgsamel2pl3p_bd
            l3_policy_id: { get_resource: demo_diffptgsamel2pl3p_l3_policy }
            shared: False

    demo_diffptgsamel2pl3p_ptg:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diffptgsamel2pl3p_ptg
            l2_policy_id: {get_resource: demo_diffptgsamel2pl3p_l2_policy}
            shared: False

# Creating L3Policy,L2Policy and PTG for header DiffPTG_DiffL2P_SameL3P
    demo_diffptgl2psamel3p_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_diffptgl2psamel3p_l3p
            ip_pool: "7.7.7.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_diffptgl2psamel3p_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_diffptgl2psamel3p_l3_policy
        properties:
            name: demo_diffptgl2psamel3p_bd
            l3_policy_id: { get_resource: demo_diffptgl2psamel3p_l3_policy }
            shared: False

    demo_diffptgl2psamel3p_ptg:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diffptgl2psamel3p_ptg
            l2_policy_id: {get_resource: demo_diffptgl2psamel3p_l2_policy}
            shared: False

# Creating L3Policy,L2Policy and PTG for header DiffPTG_DiffL2P_DiffL3P
    demo_srvr_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_srvr_subnet
            ip_pool: "30.30.30.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_clnt_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_clnt_subnet
            ip_pool: "40.40.40.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_srvr_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_srvr_l3_policy
        properties:
            name: demo_srvr_bd
            l3_policy_id: { get_resource: demo_srvr_l3_policy }
            shared: False

    demo_clnt_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_clnt_l3_policy
        properties:
            name: demo_clnt_bd
            l3_policy_id: { get_resource: demo_clnt_l3_policy }
            shared: False

# VM/Instance launch

    vm1:
        type: OS::Nova::Server
        depends_on: vm1_mgmt_pt
        depends_on: vm1_data_pt
        properties:
            name: vm1
            availability_zone: { get_param: availability_zone }
            image: {get_param: vm_image}
            flavor: {get_param: vm_flavor}
            key_name: { get_param: key_name }
            networks:
                - port: {get_attr: [vm1_mgmt_pt, port_id]}
                - port: {get_attr: [vm1_data_pt, port_id]}
            user_data_format: RAW

    vm2:
        type: OS::Nova::Server
        depends_on: vm2_mgmt_pt
        depends_on: vm2_data_pt
        properties:
            name: vm2
            availability_zone: { get_param: availability_zone }
            image: {get_param: vm_image}
            flavor: {get_param: vm_flavor}
            key_name: { get_param: key_name }
            networks:
                - port: {get_attr: [vm2_mgmt_pt, port_id]}
                - port: {get_attr: [vm2_data_pt, port_id]}
            user_data_format: RAW

    vm9:
        type: OS::Nova::Server
        depends_on: vm1_mgmt_pt
        depends_on: vm1_data_pt
        properties:
            name: vm9
            availability_zone: { get_param: availability_zone }
            image: {get_param: vm_image}
            flavor: {get_param: vm_flavor}
            key_name: { get_param: key_name }
            networks:
                - port: {get_attr: [vm9_mgmt_pt, port_id]}
                - port: {get_attr: [vm9_data_pt, port_id]}
            user_data_format: RAW

    vm10:
        type: OS::Nova::Server
        depends_on: vm10_mgmt_pt
        depends_on: vm10_data_pt
        properties:
            name: vm10
            availability_zone: { get_param: availability_zone }
            image: {get_param: vm_image}
            flavor: {get_param: vm_flavor}
            key_name: { get_param: key_name }
            networks:
                - port: {get_attr: [vm10_mgmt_pt, port_id]}
                - port: {get_attr: [vm10_data_pt, port_id]}
            user_data_format: RAW


outputs:

    server_ptg_id:
        value: { get_resource: server_ptg }

    client_ptg_id:
        value: { get_resource: client_ptg } 

    demo_srvr_l3_policy_id:
        value: { get_resource: demo_srvr_l3_policy }

    demo_clnt_l3_policy_id:  
        value: { get_resource: demo_clnt_l3_policy }

    demo_srvr_l2_policy_id:
        value: { get_resource: demo_srvr_l2_policy }

    demo_clnt_l2_policy_id:
        value: { get_resource: demo_clnt_l2_policy }

    demo_ruleset_tcp_id:
        value: { get_resource: demo_ruleset_tcp }

    demo_rule_any_tcp_id:
        value: { get_resource: demo_rule_any_tcp }

    demo_ruleset_any_udp_id:
        value: { get_resource: demo_ruleset_any_udp }

    demo_rule_any_udp_id:
        value: { get_resource: demo_rule_any_udp }

    demo_ruleset_icmp_id:
        value: { get_resource: demo_ruleset_icmp }

    demo_rule_icmp_id:
        value: { get_resource: demo_rule_icmp }
